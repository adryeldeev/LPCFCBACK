generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model carro {
  id            Int      @id @default(autoincrement())
  modelo        String
  ano           Int
  preco         Float
  quilometragem Int?
  cor           String?
  combustivel   String?
  cambio        String?
  portas        Int?
 descricao String? @db.VarChar(10000) 
  imagem        String?
  destaque      Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  marcaId       Int
  marca         marca    @relation(fields: [marcaId], references: [id])
  imagens       imagem[]

  @@index([marcaId], map: "carro_marcaId_fkey")
}

model marca {
  id     Int     @id @default(autoincrement())
  nome   String  @unique
  logo   String
  carros carro[]
}

model imagem {
  id      Int    @id @default(autoincrement())
  url     String
  principal Boolean @default(false)
  carroId Int

  carro   carro  @relation(fields: [carroId], references: [id])

  @@index([carroId], map: "imagem_carroId_fkey")
}

model user {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique(map: "User_email_key")
  password  String
  role      user_role @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model vendedor {
  id        Int      @id @default(autoincrement())
  nome      String
  telefone  String   @unique(map: "Vendedor_telefone_key")
  createdAt DateTime @default(now())
}

model propostaVenda {
  id        Int      @id @default(autoincrement())
  veiculo   String
  nome      String
  telefone  String
  whatsapp  Boolean? @default(false)
  email     String
  createdAt DateTime @default(now())
}

model financiamento {
  id             Int       @id @default(autoincrement())
  veiculo        String?
  nome           String
  telefone       String
  whatsapp       Boolean?  @default(false)
  email          String
  dataNascimento DateTime?
  cpf            String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

enum user_role {
  ADMIN
  USER
}
